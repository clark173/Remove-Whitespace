#!/usr/bin/env python2
import argparse

from file_handler import FileHandler


def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--trailing-only', help='Only remove trailing \
                         whitespace found at the end of a line. Note that this\
                         does not remove multiple blank spaces in a row if \
                         found.', action='store_true')
    parser.add_argument('-v', '--verbose', help='Where applicable, output more\
                         data to help with debugging.', action='store_true')
    parser.add_argument('input_file', help='Specify the filename that will be \
                         checked for unnecessary whitespace. A copy of this \
                         file will be stored as <input_file>.backup', type=str)
    return parser.parse_args()

def check_trailing(lines, verbose):
    line_number = 1
    output_lines = []

    for line in lines:
        stripped_line = line.replace('\n', '')

        if len(stripped_line) > 0 and stripped_line[-1].isspace():
            if verbose:
                print "Trailing whitespace on line %s" % (line_number)
            stripped_line = stripped_line.rstrip()
            output_lines.append('%s\n' % (stripped_line))
        elif len(stripped_line) > 0 and not stripped_line[-1].isspace():
            output_lines.append('%s\n' % (stripped_line))
        else:
            output_lines.append('\n')

        line_number += 1
    return output_lines

def main():
    args = parse_arguments()
    file_handler = FileHandler(args.input_file)
    new_lines = check_trailing(file_handler.lines, args.verbose)
    file_handler.save_file(new_lines, args.verbose)


if __name__ == "__main__":
    main()
