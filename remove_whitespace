#!/usr/bin/env python2
import argparse
import os
import sys

from shutil import copyfile


FILE_ERROR = 1
EMPTY_FILE = 2


def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--trailing-only', help='Only remove trailing \
                         whitespace found at the end of a line. Note that this\
                         does not remove multiple blank spaces in a row if \
                         found.', action='store_true')
    parser.add_argument('input_file', help='Specify the filename that will be \
                         checked for unnecessary whitespace. A copy of this \
                         file will be stored as <input_file>.backup', type=str)
    return parser.parse_args()

def open_file(input_file):
    if not os.path.isabs(input_file):
        directory = os.path.dirname(os.path.realpath(__file__))
        input_file = os.path.join(directory, input_file)

    try:
        f = open(input_file, 'r')
    except IOError:
        print "Error: '%s' does not appear to be a valid file"
        print "Please try again with a valid filepath"
        sys.exit(FILE_ERROR)

    return f, input_file

def read_file(input_file):
    lines = input_file.readlines()

    if len(lines) < 1:
        print "Error: File is empty - nothing to do"
        print "Please try again with a populated file"
        sys.exit(EMPTY_FILE)

    return lines

def copy_file(filename):
    backup = '%s.backup' % (filename)
    copyfile(filename, backup)

def main():
    args = parse_arguments()
    input_file, filename = open_file(args.input_file)
    lines = read_file(input_file)
    copy_file(filename)

if __name__ == "__main__":
    main()
